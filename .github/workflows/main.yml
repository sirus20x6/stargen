name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cc: gcc
            cxx: g++
          - os: windows-2019
            cc: gcc
            cxx: g++
    steps:
    - uses: actions/checkout@v3

    - name: Set up MinGW (Windows)
      if: matrix.os == 'windows-2019'
      uses: egor-tensin/setup-mingw@v2.2.0
      with:
        version: 12.2.0 

    - name: Set up environment variables
      run: |
        echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV

    - name: Configure CMake
      run: |
        if [ "${{ matrix.os }}" == "windows-2019" ]; then
          cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -G "MinGW Makefiles"
        else
          cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        fi
        
    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: build
      run: ctest -C ${{env.BUILD_TYPE}}

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
