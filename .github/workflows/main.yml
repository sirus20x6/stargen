name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build-and-package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cc: gcc-10
            cxx: g++-10
            artifact_extension: tar.gz
          - os: windows-2019
            cc: gcc
            cxx: g++
            artifact_extension: zip
    steps:
    - uses: actions/checkout@v3

    - name: Install GCC 10 (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-10 g++-10

    - name: Set up MinGW (Windows)
      if: matrix.os == 'windows-2019'
      uses: egor-tensin/setup-mingw@v2.2.0
      with:
        version: 12.2.0 

    - name: Set up environment variables
      run: |
        echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV

    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-2019'
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -G "MinGW Makefiles" -DCMAKE_CXX_STANDARD=20
      shell: pwsh

    - name: Configure CMake (Unix)
      if: matrix.os != 'windows-2019'
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_CXX_STANDARD=20

    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}} --verbose

    # ... rest of the workflow remains the same